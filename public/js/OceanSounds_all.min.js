var OceanDatabaseManager = function() {
  console.log("* OceanDatabaseManager Init *");
  this.AUDIOPATH = "/audio/ocean/";
  this.audioDatabase = [
    { 
      "audioFilename": "164767__rucisko__ocean-waves_Coimbra_Portugal.mp3", 
      "locationName": "Figueria da Foz, Portugal", 
      "locationCountry": "Portugal",
      "thumb_image_URL": "Coimbra_Portugal_thumb.jpg",
      "rating": "5",
      "xpos": "32",
      "ypos": "164",
      "volumeAdj": 0
    },
    { 
      "audioFilename": "20140316-064528-Indonedia-SeaOfJava.mp3", 
      "locationName": "Indonesia, Java Sea", 
      "locationCountry": "Indonesia",
      "thumb_image_URL": "20140316-064528-Indonedia-SeaOfJava_thumb.jpg",
      "rating": "4",
      "xpos": "267",
      "ypos": "264",
      "volumeAdj": 0
    },
    { 
      "audioFilename": "166214__abcopen__southern-ocean__Warrnambool_Australia_Levys-Beach.mp3", 
      "locationName": "Levy's Beach, Warrnambool, Australia",
      "locationCountry": "Australia",
      "thumb_image_URL": "Levys-Beach_Warrnambool_Australia_thumb.jpg",
      "rating": "5",
      "xpos": "356",
      "ypos": "372",
      "volumeAdj": 0
    },
    { 
      "audioFilename": "frenchPolynesia.mp3", 
      "locationName": "French Polynesia", 
      "locationCountry": "French Polynesia",
      "thumb_image_URL": "fakarava_island_french_polynesia_thumb.jpg",
      "rating": "4",
      "xpos": "438",
      "ypos": "259",
      "volumeAdj": 0
    },
    { 
      "audioFilename": "OceanBeach-LandsEndwFogHorn.mp3", 
      "locationName": "Land's End, San Francisco CA, USA", 
      "locationCountry": "United States",
      "thumb_image_URL": "OceanBeach-LandsEndwFogHorn_thumb.jpg",
      "rating": "5",
      "xpos": "543",
      "ypos": "160",
      "volumeAdj": 0
    }
  ];


};

OceanDatabaseManager.prototype.getAudioData_audioFileNameWithPath = function(index)  {
  var obj = this.AUDIOPATH + this.audioDatabase[index].audioFilename; // getAudioDataObject(index);
  return obj;
};

// for now, allow grabbing entire db object.
OceanDatabaseManager.prototype.getAudioDatabase = function(index)  {
  return this.audioDatabase;
};

OceanDatabaseManager.prototype.getAudioDataObject = function(index)  {
  if(index>=0 && index<this.audioDatabase.length) {
    return this.audioDatabase;
  }
  alert("ERROR - Invalid audio object id.");
};

OceanDatabaseManager.prototype.getAudioData_locationName = function(index)  {
  var obj = this.getAudioDataObject(index);
  return obj.locationName;
};

OceanDatabaseManager.prototype.getAudioData_rating = function(index)  {
  var obj = this.getAudioDataObject(index);
  return obj.rating;
};

OceanDatabaseManager.prototype.getAudioData_xpos = function(index)  {
  var obj = this.getAudioDataObject(index);
  return obj.xpos;
};

OceanDatabaseManager.prototype.getAudioData_ypos = function(index)  {
  var obj = this.getAudioDataObject(index);
  return obj.ypos;
};

OceanDatabaseManager.prototype.getDatabaseLength = function() {
  return this.audioDatabase.length;
};





;
var OceanInterfaceManager = function(oDBMgr, oAudioController, oViewMgr) {
  console.log("* OceanInterfaceManager Init *");
  if( !oDBMgr ) { 
    console.error("ERROR - OceanInterfaceManager requires an OceanDatabaseManager class reference to initialize.  Exiting...");
    return;
  }
  if( !oAudioController ) { 
    console.error("ERROR - OceanInterfaceManager requires aAudioPlayer class (maybe PLBAudioController?) to initialize.  Exiting...");
    return;
  }  
  if( !oViewMgr ) { 
    console.error("ERROR - OceanInterfaceManager requires an OceanViewManager class reference to initialize.  Exiting...");
    return;
  }
  this.oDBMgr = oDBMgr;
  this.oAudioController = oAudioController;
  this.oViewMgr = oViewMgr;

  this.currentSelection = 0;
  this.lastSelection = -1;
  this.isMuted = false;

  this.playButtonVisibilityState = this.setupPlayButtonVisibilityStates();

};



OceanInterfaceManager.prototype.setupPlayButtonVisibilityStates = function() {
  var len = this.oDBMgr.getDatabaseLength();
  var array = [];
  for(var i=0; i<len; i++) {
    array.push( true ); // Play button visible
  }
  return array;
};



OceanInterfaceManager.prototype.playerClicked = function(index) {
  this.currentSelection = index;
  document.getElementById('locAudioBut' + this.currentSelection).setAttribute('class', 'buttonImage playButtonImage');

  oAudioController.pause();
  this.setMuteToOff();


  // Current click handling
  var nextState = false; // PLAY IT!
  if(this.currentSelection===this.lastSelection) {
    nextState = !(this.playButtonVisibilityState[this.currentSelection]); // TOGGLE PLAY/PAUSE
  }


  // Reset all
  for(var i=0; i<this.playButtonVisibilityState.length; i++) {
    this.playButtonVisibilityState[i] = true; // reset all play buttons
    document.getElementById('locAudioBut' + i).setAttribute('class', 'buttonImage playButtonImage'); // Showing play button
  }
  this.playButtonVisibilityState[this.currentSelection] = nextState; 


  // Control Audio & Page Elements
  if(!this.playButtonVisibilityState[this.currentSelection]) {
    // Play
    oAudioController.loadThenPlay( this.oDBMgr.getAudioData_audioFileNameWithPath(this.currentSelection) );
    document.getElementById('locAudioBut' + this.currentSelection).setAttribute('class', 'buttonImage pauseButtonImage'); // Showing pause button
   }

  // this.drawPinsWithSelection( this.currentSelection );

  this.lastSelection = this.currentSelection;
};



// MAP MANIPULATION METHODS

OceanInterfaceManager.prototype.mapMoveLeft = function() {
  if ( this.currentSelection > 0 ) {
    this.currentSelection--;
  }
  this.playerClicked(this.currentSelection);
};

OceanInterfaceManager.prototype.mapMoveRight = function() {
  var len = this.oDBMgr.getDatabaseLength();
  if ( this.currentSelection < len-1 ) {
    this.currentSelection++;
  }
  this.playerClicked(this.currentSelection);
};

OceanInterfaceManager.prototype.muteToggle = function() {
  $('#muteButton').toggleClass("mutedMode");
  this.isMuted = !this.isMuted;
  this.isMuted ? oAudioController.pause() : oAudioController.play();
};

OceanInterfaceManager.prototype.setMuteToOff = function() {
  $('#muteButton').removeClass("mutedMode");
  this.isMuted = false;
};

OceanInterfaceManager.prototype.drawPinsWithSelection = function( selected ) {
  // console.log("drawPinsWithSelection - " + selected);
  var len = this.oDBMgr.getDatabaseLength();

  $('#leftArrowButton').removeClass("disabled");
  $('#rightArrowButton').removeClass("disabled");

  if(selected===0){
    $('#leftArrowButton').addClass("disabled");
  } else if(selected===len-1) {
    $('#rightArrowButton').addClass("disabled");
  }


  $("#pinId0").animate({
      position: 'relative',
      left: this.oDBMgr.audioDatabase[selected].xpos + "px",
      top:  this.oDBMgr.audioDatabase[selected].ypos + "px",
      opacity: '1.00'
    }, 1000, "swing", function() {
        $( "#pinId0" ).html( "<div>" + function() { this.oDBMgr.getAudioData_locationName(selected); } + "</div>" );
    });

};
;var OceanLocationElementCreator = function( oDBMgr ) {
  console.log("* OceanViewManger Init *");
  if( !oDBMgr ) { 
    console.error("ERROR - OceanViewManager requires an OceanDatabaseManager() reference to initialize.  Exiting...");
    return;
  }
  this.oDBMgr = oDBMgr;

};

// View Drawing
OceanLocationElementCreator.prototype.drawAllOceans = function() {
  var len = this.oDBMgr.getDatabaseLength();
  for(var i=0; i<len; i++) {
    this.drawEachOcean( i, "#oc"+i );
  }
};

// View Templates
OceanLocationElementCreator.prototype.drawEachOcean = function( index, elementId ) {
  var audioDatabase = this.oDBMgr.getAudioDatabase();

  var locationName  = audioDatabase[index].locationName;
  var thumbImageURL = audioDatabase[index].thumb_image_URL;
  var locationHTML = '<li id="oc' + index + '" class="oceanChild" onclick="audioPlayerClicked(' + index + ')">' + 
    '<div class="ocImageDiv" style="background: #666 url( \'images/locations/' + thumbImageURL + '\' ) no-repeat center center;background-size: cover;">'+ 
      '<div id="locAudioBut' + index + '" class="buttonImage playButtonImage" style="width:75px;height:75px;" ></div>' + 
      '<div class="ocTextDiv"><p>' + locationName + '</p></div>';
      '</li>';


//var locationHTML = '<div class="buttonImage playButtonImage" style="width:75px;height:75px;" ></div>';

  $( locationHTML ).insertAfter( elementId );
};
;/* 
  PLBAudioController.js - a very simple HTML5 audio controller, that's compatible with iPhone/iPad/Netscape/Chrome.  Amazing.

  
  Expects both MP3 and OGG files, in the form of...

  <audio id='audioPlayer' preload="none" loop controls autoplay>
    <source id="mp3Source" type="audio/mpeg" src="<your-path>/OceanBeach-LandsEndwFogHorn.mp3">
    <source id="oggSource" type="audio/ogg"  src="<your-path>/OceanBeach-LandsEndwFogHorn.ogg">
    Your browser does not support the audio element, please update your browser!
  </audio>

*/


var PLBAudioController = function( playerId ) {
  this.playerId = playerId;
  this.audioPlayerElement = document.getElementById( playerId );
};

PLBAudioController.prototype.loadThenPlay = function( anMP3AudioURL ) {
  var anOGGAudioURL = anMP3AudioURL.replace(".mp3", ".ogg"); // Extract .ogg filename

  document.getElementById('mp3Source').src = anMP3AudioURL;
  document.getElementById('oggSource').src = anOGGAudioURL;

  this.audioPlayerElement.load();
  this.audioPlayerElement.play();

  return true;
};

PLBAudioController.prototype.pause = function() {
  this.audioPlayerElement.pause();

  return true;
};

PLBAudioController.prototype.play = function() {
  this.audioPlayerElement.play();

  return true;
};
;
var oDatabaseMgr;
var oAudioController;
var oLocationElementCreator;
var oInterfaceMgr;

// ------ //

var audioPlayerClicked = function( index ) {
  oInterfaceMgr.playerClicked( index );
};


var listenersSetup = function() {
  $('#leftArrowButton').click(function(){
    oInterfaceMgr.setMuteToOff();
    oInterfaceMgr.mapMoveLeft();
  });
  $('#rightArrowButton').click(function(){
    oInterfaceMgr.setMuteToOff();
    oInterfaceMgr.mapMoveRight();
  });
  $('#muteButton').click(function(){
    oInterfaceMgr.muteToggle();
  });

  // Listen for arrow keys
  $(document).keydown(function(e) {
    switch(e.which) {
      case 37: // left
      console.log("left");
      oInterfaceMgr.mapMoveLeft();
      break;

      case 38: // up
      console.log("volume up");
      oInterfaceMgr.muteToggle();
      break;

      case 39: // right
      console.log("right");
      oInterfaceMgr.mapMoveRight();
      break;

      case 40: // down
      console.log("volume down");
      oInterfaceMgr.muteToggle();
      break;

      default: return; // exit this handler for other keys
    }

  });
};


// ------ //


// MAIN - ON.READY
$(document).ready(function (){
  listenersSetup();

  // Class Initialization (Psuedoclassical)
  oDatabaseMgr  = new OceanDatabaseManager();

  // Draw page components
  oLocationElementCreator = new OceanLocationElementCreator( oDatabaseMgr );
  oLocationElementCreator.drawAllOceans(); // Draw the available oceans

  // Init a simple HTML5 Audio Controller (iOS/Netscape compatible)
  oAudioController = new PLBAudioController('audioPlayerId');

  // Handle user input (clicks & arrow key presses)
  oInterfaceMgr = new OceanInterfaceManager( oDatabaseMgr, oAudioController, oLocationElementCreator );
});



