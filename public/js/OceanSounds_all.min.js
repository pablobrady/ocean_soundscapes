'use strict;'

/// Ocean View Elements Manager 

var OceanViewManager = function( oDBMgr ) {
  console.log("* OceanViewManger Init *");
  if( !oDBMgr ) { 
    console.error("ERROR - OceanViewManager requires an OceanDatabaseManager() reference to initialize.  Exiting...");
    return;
  }
  this.oDBMgr = oDBMgr;

};

// View Drawing
OceanViewManager.prototype.drawLocationsStack = function() {
  var len = this.oDBMgr.getDatabaseLength();
  for(var i=0; i<len; i++) {
    this.insertLocationNavElement( i, "#locationInsertionPoint" );
  }
};

// View Templates
OceanViewManager.prototype.insertLocationNavElement = function( index, elementId ) {
  var audioDatabase = this.oDBMgr.getAudioDatabase();

  var locationName  = audioDatabase[index].locationName;
  var thumbImageURL = audioDatabase[index].thumb_image_URL;

  var locationHTML = '<div id="locBut' + index + '" class="liItem liItemBorderBlue" style="background: #666 url( \'images/locations/' + thumbImageURL + '\' ) no-repeat center center;background-size: cover;"><image id="locAudioBut' + index + '" onclick="audioPlayerClicked(' + index + ')" class="buttonImage playButtonImage" width="75" height="75" border="0" alt=""></image><span>' + locationName + '</span></div>';

  $( locationHTML ).insertAfter( elementId );
};


;'use strict;'

// http://demo.codesamplez.com/javascript/audio
// http://codesamplez.com/programming/control-html5-audio-with-jquery

console.log("audioController arrival.");

var audio;
var lastVolumeLevel = 0.75;
function jInit(){
    audio = $("#audioPlayer");
    addEventHandlers();
}

function addEventHandlers(){
    $("a.load").click(loadAudio);
    $("a.start").click(startAudio);
    $("a.forward").click(forwardAudio);
    $("a.back").click(backAudio);
    $("a.pause").click(pauseAudio);
    $("a.stop").click(stopAudio);
    $("a.volume-up").click(volumeUp);
    $("a.volume-down").click(volumeDown);
    $("a.mute").click(toggleMuteAudio);

}

function loadAudio(){
    audio.bind("load",function(){ 
        var errmsg = "Sorry but there was an error: ";
        if ( status == "error" ) {
          alert( errmsg + xhr.status + " " + xhr.statusText );
        }
    });
    unmuteAudio();
    audio.trigger('load');
}

function startAudio(){
    unmuteAudio();
    audio.trigger('play');
}

function pauseAudio(){
    audio.trigger('pause');
}

function stopAudio(){
    pauseAudio();
    audio.prop("currentTime",0);
}

function forwardAudio(){
    pauseAudio();
    audio.prop("currentTime",audio.prop("currentTime")+5);
    startAudio();
}

function backAudio(){
    pauseAudio();
    audio.prop("currentTime",audio.prop("currentTime")-5);
    startAudio();
}

function volumeUp(){
    console.log("volumeUp!");
    var volume = audio.prop("volume")+0.2;
    if(volume >1){
        volume = 1;
    }
    audio.prop("volume",volume);
}

function volumeDown(){
    console.log("volumeDown!");
    var volume = audio.prop("volume")-0.2;
    if(volume <0){
        volume = 0;
    }
    audio.prop("volume",volume);
}

function toggleMuteAudio(){
    audio.prop("muted",!audio.prop("muted"));
}


function muteAudio(){
    lastVolumeLevel = audio.prop("volume");
    audio.prop("volume",0);
}

function unmuteAudio(){
    audio.prop("volume",lastVolumeLevel);
}


;'use strict;'

var OceanDatabaseManager = function() {
  console.log("* OceanDatabaseManager Init *");
  this.AUDIOPATH = "audio\\ocean\\";
  this.audioDatabase = [
    { 
      "audioFilename": "164767__rucisko__ocean-waves_Coimbra_Portugal.mp3", 
      "locationName": "Figueria da Foz, Portugal", 
      "locationCountry": "Portugal",
      "thumb_image_URL": "Coimbra_Portugal_thumb.jpg",
      "rating": "5",
      "xpos": "32",
      "ypos": "164",
      "volumeAdj": 0
    },
    { 
      "audioFilename": "20140316-064528-Indonedia-SeaOfJava.mp3", 
      "locationName": "Indonesia, Java Sea", 
      "locationCountry": "Indonesia",
      "thumb_image_URL": "20140316-064528-Indonedia-SeaOfJava_thumb.jpg",
      "rating": "4",
      "xpos": "267",
      "ypos": "264",
      "volumeAdj": 0
    },
    { 
      "audioFilename": "166214__abcopen__southern-ocean__Warrnambool_Australia_Levys-Beach.mp3", 
      "locationName": "Levy's Beach, Warrnambool, Australia",
      "locationCountry": "Australia",
      "thumb_image_URL": "Levys-Beach_Warrnambool_Australia_thumb.jpg",
      "rating": "5",
      "xpos": "356",
      "ypos": "372",
      "volumeAdj": 0
    },
    { 
      "audioFilename": "frenchPolynesia.mp3", 
      "locationName": "French Polynesia", 
      "locationCountry": "French Polynesia",
      "thumb_image_URL": "fakarava_island_french_polynesia_thumb.jpg",
      "rating": "4",
      "xpos": "438",
      "ypos": "259",
      "volumeAdj": 0
    },
    { 
      "audioFilename": "OceanBeach-LandsEndwFogHorn.mp3", 
      "locationName": "Land's End, San Francisco CA, USA", 
      "locationCountry": "United States",
      "thumb_image_URL": "OceanBeach-LandsEndwFogHorn_thumb.jpg",
      "rating": "5",
      "xpos": "543",
      "ypos": "160",
      "volumeAdj": 0
    }
  ];


};

OceanDatabaseManager.prototype.getAudioData_audioFileNameWithPath = function(index)  {
  var obj = this.AUDIOPATH + this.audioDatabase[index].audioFilename; // getAudioDataObject(index);
  console.log("INDEX = " + index + " FILE: " + obj);
  return obj;
};

// for now, allow grabbing entire db object.
OceanDatabaseManager.prototype.getAudioDatabase = function(index)  {
  return this.audioDatabase;
};

OceanDatabaseManager.prototype.getAudioDataObject = function(index)  {
  if(index>=0 && index<this.audioDatabase.length) {
    return this.audioDatabase;
  }
  alert("ERROR - Invalid audio object id.");
};

OceanDatabaseManager.prototype.getAudioData_locationName = function(index)  {
  var obj = this.getAudioDataObject(index);
  return obj.locationName;
};

OceanDatabaseManager.prototype.getAudioData_rating = function(index)  {
  var obj = this.getAudioDataObject(index);
  return obj.rating;
};

OceanDatabaseManager.prototype.getAudioData_xpos = function(index)  {
  var obj = this.getAudioDataObject(index);
  return obj.xpos;
};

OceanDatabaseManager.prototype.getAudioData_ypos = function(index)  {
  var obj = this.getAudioDataObject(index);
  return obj.ypos;
};

OceanDatabaseManager.prototype.getDatabaseLength = function() {
  return this.audioDatabase.length;
};





;'use strict;'


var OceanInterfaceManager = function(oDBMgr, oViewMgr) {
  console.log("* OceanInterfaceManager Init *");
  if( !oDBMgr ) { 
    console.error("ERROR - OceanInterfaceManager requires an OceanDatabaseManager() reference to initialize.  Exiting...");
    return;
  }
  if( !oViewMgr ) { 
    console.error("ERROR - OceanInterfaceManager requires an OceanViewManager() reference to initialize.  Exiting...");
    return;
  }
  this.oDBMgr = oDBMgr;
  this.oViewMgr = oViewMgr;

  this.currentSelection = 0;
  this.lastSelection = -1;

  this.isFirstPlay = true;
  this.playButtonVisibilityState = this.setupPlayButtonVisibilityStates();

  this.setupListeners();
};


OceanInterfaceManager.prototype.setupPlayButtonVisibilityStates = function() {
  var len = this.oDBMgr.getDatabaseLength();
  var array = [];
  for(var i=0; i<len; i++) {
    array.push( true ); // Play button visible
  }
  return array;
};


OceanInterfaceManager.prototype.setupListeners = function() {
  // Listen for Audio playback start
  document.getElementById('audioPlayer').addEventListener('playing',function() { 
    // console.log("this.isPlaying is TRUE");
    this.isFirstPlay=false; 
  },false);
};


OceanInterfaceManager.prototype.playerClicked = function(index) {
  this.currentSelection = index;

  document.getElementById('locAudioBut' + this.currentSelection).setAttribute('class', 'buttonImage playButtonImage');

  // Current click handling
  var nextState = false; // PLAY IT!
  if(this.currentSelection===this.lastSelection) {
    nextState = !(this.playButtonVisibilityState[this.currentSelection]); // TOGGLE PLAY/PAUSE
  }

  // Reset all PLAY/PAUSE button images / borders
  for(var i=0; i<this.playButtonVisibilityState.length; i++) {
    document.getElementById('locAudioBut' + i).setAttribute('class', 'buttonImage playButtonImage');
    document.getElementById('locBut' + i).setAttribute('class', 'liItem liItemBorderBlue');
    this.playButtonVisibilityState[i] = true; // reset all play buttons
  }
  this.playButtonVisibilityState[this.currentSelection] = nextState; // reset all play buttons

  // Control Audio / Page Elements
  if(this.playButtonVisibilityState[this.currentSelection]) {
    document.getElementById('nowPlayingMsg1').innerHTML = "Select a location on the left.";
    document.getElementById('nowPlayingMsg2').innerHTML = "&nbsp;";
    this.mutedAudioCallback();
    document.getElementById('locAudioBut' + this.currentSelection).setAttribute('class', 'buttonImage playButtonImage');
    document.getElementById('locBut' + this.currentSelection).setAttribute('class', 'liItem liItemBorderBlue');
  } else {
    document.getElementById('audioPlayer').setAttribute('src', this.oDBMgr.getAudioData_audioFileNameWithPath(this.currentSelection) );
    document.getElementById('nowPlayingMsg1').innerHTML = "Now playing ocean sounds from...";
    document.getElementById('nowPlayingMsg2').innerHTML = this.oDBMgr.audioDatabase[this.currentSelection].locationName;
    this.unmutedAudioCallback();
    this.loadAudioCallback();
    document.getElementById('locAudioBut' + this.currentSelection).setAttribute('class', 'buttonImage pauseButtonImage');
    document.getElementById('locBut' + this.currentSelection).setAttribute('class', 'liItem liItemBorderRed');
  }

  this.drawPinsWithSelection( this.currentSelection );

  this.lastSelection = this.currentSelection;
};



// MAP MANIPULATION METHODS

OceanInterfaceManager.prototype.mapMoveLeft = function() {
  if ( this.currentSelection > 0 ) {
    this.currentSelection--;
  }
  this.playerClicked(this.currentSelection);
}

OceanInterfaceManager.prototype.mapMoveRight = function() {
  var len = this.oDBMgr.getDatabaseLength();
  if ( this.currentSelection < len-1 ) {
    this.currentSelection++;
  }
  this.playerClicked(this.currentSelection);
};

OceanInterfaceManager.prototype.muteToggle = function() {
  $('#muteButton').toggleClass("mutedMode");
  this.toggleAudioCallback();
};


OceanInterfaceManager.prototype.drawPinsWithSelection = function( selected ) {
  // console.log("drawPinsWithSelection - " + selected);
  var len = this.oDBMgr.getDatabaseLength();

  $('#leftArrowButton').removeClass("disabled");
  $('#rightArrowButton').removeClass("disabled");

  if(selected===0){
    $('#leftArrowButton').addClass("disabled");
  } else if(selected===len-1) {
    $('#rightArrowButton').addClass("disabled");
  }


  $("#pinId0").animate({
      position: 'relative',
      left: this.oDBMgr.audioDatabase[selected].xpos + "px",
      top:  this.oDBMgr.audioDatabase[selected].ypos + "px",
      opacity: '1.00'
    }, 1000, "swing", function() {
        $( "#pinId0" ).html( "<div>" + function() { this.oDBMgr.getAudioData_locationName(selected) } + "</div>" );
    });

};

// Plugin Audio Manager Interface
OceanInterfaceManager.prototype.setLoadAudioCallback = function( cb ) {
  this.loadAudioCallback = cb;
};

OceanInterfaceManager.prototype.setUnmutedAudioCallback = function( cb ) {
  this.unmutedAudioCallback = cb;
};

OceanInterfaceManager.prototype.setMutedAudioCallback = function( cb ) {
  this.mutedAudioCallback = cb;
};

// ------ //


var oDatabaseMgr;
var oViewMgr;
var oInterfaceMgr;

var audioPlayerClicked = function( index ) {
  oInterfaceMgr.playerClicked( index );
};



// ------ //

var jQueryListenersSetup = function() {
  $('#leftArrowButton').click(function(){
    oInterfaceMgr.mapMoveLeft();
  });
  $('#rightArrowButton').click(function(){
    oInterfaceMgr.mapMoveRight();
  });
  $('#muteButton').click(function(){
    oInterfaceMgr.muteToggle();
  });

  // Listen for arrow keys
  $(document).keydown(function(e) {
    switch(e.which) {
      case 37: // left
      console.log("left");
      oInterfaceMgr.mapMoveLeft();
      break;

      case 38: // up
      console.log("volume up");
      oInterfaceMgr.muteToggle();
      break;

      case 39: // right
      console.log("right");
      oInterfaceMgr.mapMoveRight();
      break;

      case 40: // down
      console.log("volume down");
      oInterfaceMgr.muteToggle();
      break;

      default: return; // exit this handler for other keys
    }

  });
}


// MAIN - ON.READY
$(document).ready(function (){
  // Initialization
  jInit(); // Init the Audio Player actions/listeners (in audioController.js)
  jQueryListenersSetup();

  // Class Initialization (Psuedoclassical)
  oDatabaseMgr  = new OceanDatabaseManager();

  // Draw any complex elements
  oViewMgr      = new OceanViewManager( oDatabaseMgr );
  oViewMgr.drawLocationsStack(); // Draw the available locations on the left column (desktop)

  // Handle user input (clicks & arrow key presses)
  oInterfaceMgr = new OceanInterfaceManager( oDatabaseMgr, oViewMgr );

  // Plug-in the audio control callback methods (from audioController.js)
  oInterfaceMgr.setLoadAudioCallback( loadAudio );
  oInterfaceMgr.setUnmutedAudioCallback( unmuteAudio );
  oInterfaceMgr.setMutedAudioCallback( muteAudio );

});



